# Generated by Django 5.1.3 on 2024-12-13 19:46

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "profile",
                    models.ImageField(
                        blank=True,
                        default="profiles/default_profile_image.png",
                        null=True,
                        upload_to="profiles/",
                    ),
                ),
                ("sex", models.CharField(max_length=10)),
                ("birthdate", models.DateField(default=datetime.date.today)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_name", models.CharField(max_length=50)),
                ("event_title", models.CharField(max_length=100)),
                ("event_datetime", models.DateTimeField()),
                ("location", models.CharField(max_length=200)),
                ("category", models.CharField(max_length=100)),
                (
                    "province",
                    models.CharField(
                        choices=[
                            ("choose province", "เลือกจังหวัด"),
                            ("Bangkok", "Bangkok (กรุงเทพมหานคร)"),
                            ("Krabi", "Krabi (กระบี่)"),
                            ("Kanchanaburi", "Kanchanaburi (กาญจนบุรี)"),
                            ("Kalasin", "Kalasin (กาฬสินธุ์)"),
                            ("Kamphaeng Phet", "Kamphaeng Phet (กำแพงเพชร)"),
                            ("Khon Kaen", "Khon Kaen (ขอนแก่น)"),
                            ("Chanthaburi", "Chanthaburi (จันทบุรี)"),
                            ("Chachoengsao", "Chachoengsao (ฉะเชิงเทรา)"),
                            ("Chonburi", "Chonburi (ชลบุรี)"),
                            ("Chainat", "Chainat (ชัยนาท)"),
                            ("Chaiyaphum", "Chaiyaphum (ชัยภูมิ)"),
                            ("Chumphon", "Chumphon (ชุมพร)"),
                            ("Chiang Rai", "Chiang Rai (เชียงราย)"),
                            ("Chiang Mai", "Chiang Mai (เชียงใหม่)"),
                            ("Trang", "Trang (ตรัง)"),
                            ("Trat", "Trat (ตราด)"),
                            ("Tak", "Tak (ตาก)"),
                            ("Nakhon Nayok", "Nakhon Nayok (นครนายก)"),
                            ("Nakhon Pathom", "Nakhon Pathom (นครปฐม)"),
                            ("Nakhon Phanom", "Nakhon Phanom (นครพนม)"),
                            ("Nakhon Ratchasima", "Nakhon Ratchasima (นครราชสีมา)"),
                            (
                                "Nakhon Si Thammarat",
                                "Nakhon Si Thammarat (นครศรีธรรมราช)",
                            ),
                            ("Nan", "Nan (น่าน)"),
                            ("Nonthaburi", "Nonthaburi (นนทบุรี)"),
                            ("Narathiwat", "Narathiwat (นราธิวาส)"),
                            ("Phayao", "Phayao (พะเยา)"),
                            (
                                "Prachuap Khiri Khan",
                                "Prachuap Khiri Khan (ประจวบคีรีขันธ์)",
                            ),
                            ("Pattani", "Pattani (ปัตตานี)"),
                            (
                                "Phra Nakhon Si Ayutthaya",
                                "Phra Nakhon Si Ayutthaya (พระนครศรีอยุธยา)",
                            ),
                            ("Phang Nga", "Phang Nga (พังงา)"),
                            ("Phatthalung", "Phatthalung (พัทลุง)"),
                            ("Phichit", "Phichit (พิจิตร)"),
                            ("Phitsanulok", "Phitsanulok (พิษณุโลก)"),
                            ("Phetchaburi", "Phetchaburi (เพชรบุรี)"),
                            ("Phetchabun", "Phetchabun (เพชรบูรณ์)"),
                            ("Phrae", "Phrae (แพร่)"),
                            ("Phuket", "Phuket (ภูเก็ต)"),
                            ("Maha Sarakham", "Maha Sarakham (มหาสารคาม)"),
                            ("Mukdahan", "Mukdahan (มุกดาหาร)"),
                            ("Mae Hong Son", "Mae Hong Son (แม่ฮ่องสอน)"),
                            ("Yasothon", "Yasothon (ยโสธร)"),
                            ("Yala", "Yala (ยะลา)"),
                            ("Roi Et", "Roi Et (ร้อยเอ็ด)"),
                            ("Ranong", "Ranong (ระนอง)"),
                            ("Rayong", "Rayong (ระยอง)"),
                            ("Ratchaburi", "Ratchaburi (ราชบุรี)"),
                            ("Lopburi", "Lopburi (ลพบุรี)"),
                            ("Lampang", "Lampang (ลำปาง)"),
                            ("Lamphun", "Lamphun (ลำพูน)"),
                            ("Loei", "Loei (เลย)"),
                            ("Sisaket", "Sisaket (ศรีสะเกษ)"),
                            ("Sakon Nakhon", "Sakon Nakhon (สกลนคร)"),
                            ("Songkhla", "Songkhla (สงขลา)"),
                            ("Satun", "Satun (สตูล)"),
                            ("Samut Prakan", "Samut Prakan (สมุทรปราการ)"),
                            ("Samut Songkhram", "Samut Songkhram (สมุทรสงคราม)"),
                            ("Samut Sakhon", "Samut Sakhon (สมุทรสาคร)"),
                            ("Sa Kaeo", "Sa Kaeo (สระแก้ว)"),
                            ("Saraburi", "Saraburi (สระบุรี)"),
                            ("Sing Buri", "Sing Buri (สิงห์บุรี)"),
                            ("Sukhothai", "Sukhothai (สุโขทัย)"),
                            ("Suphan Buri", "Suphan Buri (สุพรรณบุรี)"),
                            ("Surat Thani", "Surat Thani (สุราษฎร์ธานี)"),
                            ("Surin", "Surin (สุรินทร์)"),
                            ("Nong Khai", "Nong Khai (หนองคาย)"),
                            ("Nong Bua Lamphu", "Nong Bua Lamphu (หนองบัวลำภู)"),
                            ("Ang Thong", "Ang Thong (อ่างทอง)"),
                            ("Udon Thani", "Udon Thani (อุดรธานี)"),
                            ("Uttaradit", "Uttaradit (อุตรดิตถ์)"),
                            ("Uthai Thani", "Uthai Thani (อุทัยธานี)"),
                            ("Ubon Ratchathani", "Ubon Ratchathani (อุบลราชธานี)"),
                        ],
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="events_joined",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=255)),
                ("read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("link", models.URLField(blank=True, max_length=255, null=True)),
                ("request_status", models.CharField(default="Pending", max_length=50)),
                (
                    "event_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.event",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
